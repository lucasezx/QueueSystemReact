{"version":3,"sources":["queueSystem.js","App.js","index.js"],"names":["SECTION_NAMES","Object","freeze","QueueSystem","constructor","user","sharedQueue","arguments","length","undefined","this","tickets","queue","history","sections","reduce","acc","section","parsedData","JSON","parse","queueSystem","filter","item","ticket","_parsedData$sections","backedUpQueue","requestTicket","isPriority","Error","ticketNumber","newTicket","priority","push","positionInSection","showQueue","averageWaitTimeForAll","sectionWaitTimes","sectionCount","forEach","sectionTime","q","indexOf","callNextTicket","sectionQueue","nextTicketIndex","findIndex","nextTicket","showLastCalledTickets","slice","Math","max","emptyQueue","data","_parsedData$sections2","saveQueue","dataToSave","lastCalledTickets","localStorage","setItem","stringify","formatTicket","App","averageTime","setAverageTime","useState","clientSection","setClientSection","customerSection","setCustomerSection","getItem","loadQueueSystem","loadQueue","setUser","setQueue","calledTickets","setCalledTickets","message","setMessage","useEffect","React","createElement","style","display","justifyContent","type","placeholder","value","onChange","e","target","map","key","onClick","join","setTimeout","error","averageWaitTime","averageWaitTimes","entries","_ref","average","isNaN","formatAverageWaitTimes","whiteSpace","wordWrap","maxWidth","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b4d3b84f.chunk.js","sourcesContent":["const SECTION_NAMES = Object.freeze([\n  \"Bakery\",\n  \"Butcher\",\n  \"Fishmonger\",\n  \"Deli\",\n  \"Checkout\",\n]);\n\nclass QueueSystem {\n  constructor(user, sharedQueue = []) {\n    this.user = user;\n    this.tickets = [];\n    this.queue = sharedQueue;\n    this.history = [];\n    this.sections = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = 1;\n      return acc;\n    }, {});\n  }\n\n  static loadQueueSystem(queue) {\n    const parsedData  = JSON.parse(queue);\n    const queueSystem = new QueueSystem(parsedData.user || \"\");\n\n    queueSystem.queue = (parsedData.queue || []).filter((item) => item.user && item.ticket && item.section);\n    queueSystem.tickets = parsedData.tickets || [];\n    queueSystem.history = (parsedData.history || []).filter((item) => item.user && item.ticket);\n    queueSystem.sections = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = parsedData.sections?.[section] || 1;\n      return acc;\n    }, {});\n    return queueSystem;\n     }\n\n  backedUpQueue() {\n    return {\n      user: this.user,\n      queue: this.queue.filter((item) => item.user && item.ticket && item.section),\n      tickets: this.tickets,\n      history: this.history.filter((item) => item.user && item.ticket),\n      sections: SECTION_NAMES.reduce((acc, section) => {\n        acc[section] = this.sections[section] || 1;\n        return acc;\n      }, {}),\n    };\n  }\n\n  requestTicket(section, isPriority = false) {\n    if (!this.user) {\n      throw new Error(\"User name is required to request a ticket\");\n    }\n\n    const ticketNumber = this.sections[section]++;\n    const newTicket = {\n      user: this.user,\n      ticket: ticketNumber,\n      section: section,\n      priority: isPriority,\n    };\n\n    this.queue.push(newTicket);\n\n    const positionInSection = this.queue.filter(\n      (item) => item.section === section\n    ).length;\n\n    return `${\n      isPriority ? \"Priority\" : \"\"\n    } Ticket requested for ${\n      this.user\n    }, position ${positionInSection}`;\n  }\n\n  showQueue(section) {\n    return this.queue.filter((item) => item.section === section);\n  }\n\n  averageWaitTimeForAll() {\n    const sectionWaitTimes = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = 0;\n      return acc;\n    }, {});\n\n    const sectionCount = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = 0;\n      return acc;\n    }, {});\n\n    this.queue.forEach((item) => {\n      const { section } = item;\n      const sectionTime =\n        this.queue.filter((q) => q.section === section).indexOf(item) + 1;\n\n      sectionWaitTimes[section] += sectionTime;\n      sectionCount[section]++;\n    });\n\n    const sectionAverages = {\n      ...SECTION_NAMES.reduce((acc, section) => {\n        acc[section] = sectionWaitTimes[section] / sectionCount[section];\n        return acc;\n      }, {}),\n    };\n\n    return sectionAverages;\n  }\n\n  callNextTicket(section) {\n    const sectionQueue = this.queue.filter((item) => item.section === section);\n    if (sectionQueue.length === 0) {\n      throw new Error(`There are no tickets in the ${section} queue`);\n    }\n\n    const nextTicketIndex = sectionQueue.findIndex((item) => item.priority);\n    const nextTicket =\n      nextTicketIndex === -1 ? sectionQueue[0] : sectionQueue[nextTicketIndex];\n\n    this.queue = this.queue.filter((item) => item !== nextTicket);\n    this.history.push(nextTicket);\n    return `Next ticket for ${section} is ${nextTicket.ticket} for ${nextTicket.user}`;\n  }\n\n  showLastCalledTickets() {\n    if (!this.history) {\n      return \"No tickets have been called yet\";\n    }\n    return this.history.slice(Math.max(this.history.length - 10, 0));\n  }\n\n  emptyQueue() {\n    this.queue = [];\n    this.history = [];\n    this.tickets = [];\n    this.sections = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = 1;\n      return acc;\n    }, {});\n    this.user = \"\";\n  }\n\n  static loadQueue(data) {\n    if (!data) {\n      return new QueueSystem();\n    }\n\n    const parsedData = JSON.parse(data);\n    const queueSystem = new QueueSystem(parsedData.user || \"\");\n\n    queueSystem.queue = (parsedData.queue || []).filter(\n      (item) => item.user && item.ticket && item.section\n    );\n    queueSystem.tickets = parsedData.tickets || [];\n    queueSystem.history = (parsedData.history || []).filter(\n      (item) => item.user && item.ticket\n    );\n    queueSystem.sections = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = parsedData.sections?.[section] || 1;\n      return acc;\n    }, {});\n\n    return queueSystem;\n  }\n}\n\nexport { QueueSystem, SECTION_NAMES };\nexport default QueueSystem;\n","import React, { useState, useEffect } from \"react\";\nimport { QueueSystem, SECTION_NAMES } from \"./queueSystem.js\";\nimport \"./index.css\";\n\nfunction saveQueue(queue) {\n  if (!queue) return;\n  const dataToSave = queue.backedUpQueue();\n  dataToSave.lastCalledTickets = queue.showLastCalledTickets;\n\n  localStorage.setItem(\"queueData\", JSON.stringify(dataToSave));\n}\n\nfunction loadQueue() {\n  const data = localStorage.getItem(\"queueData\");\n  return data ? QueueSystem.loadQueueSystem(data) : new QueueSystem(\"\");\n}\n\nfunction formatTicket(ticket) {\n  return `Name: ${ticket.user}\\nTicket: ${ticket.ticket}\\nPriority: ${ticket.priority ? \"Yes\" : \"No\"}\\n----------------------`;\n}\n\nfunction formatAverageWaitTimes(averageWaitTimes) {\n  return Object.entries(averageWaitTimes)\n    .map(\n      ([section, average]) =>\n        `${section}: ${\n          average !== null && !isNaN(average) ? average : 0\n        } minutes`\n    )\n    .join(\"\\n\");\n}\n\nfunction App() {\n  const [averageTime, setAverageTime] = useState(\"\");\n  const [clientSection, setClientSection] = useState(\"\");\n  const [customerSection, setCustomerSection] = useState(\"\");\n  const [queueSystem] = useState(() => loadQueue());\n  const [user, setUser] = useState(queueSystem.user || \"\");\n  const [queue, setQueue] = useState(queueSystem.queue);\n  const [calledTickets, setCalledTickets] = useState(\n    queueSystem.lastCalledTickets || []\n  );\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (SECTION_NAMES.length > 0) {\n      setClientSection(SECTION_NAMES[0]);\n      setCustomerSection(SECTION_NAMES[0]);\n    }\n    setCalledTickets(queueSystem.showLastCalledTickets());\n  }, [queueSystem]);\n\n  const requestTicket = (isPriority = false) => {\n    if (!user) {\n      setMessage(\"User name is required to request a ticket\");\n      return;\n    }\n\n    queueSystem.user = user;\n    const message = queueSystem.requestTicket(clientSection, isPriority);\n    setQueue([...queueSystem.queue]);\n    setMessage(message);\n\n    saveQueue(queueSystem);\n  };\n\n  const callNextTicket = () => {\n    try {\n      const message = queueSystem.callNextTicket(customerSection);\n      setQueue([...queueSystem.queue]);\n      const calledTickets = queueSystem.showLastCalledTickets();\n      setCalledTickets(calledTickets);\n      setMessage(message);\n\n      setTimeout(() => {\n        saveQueue(queueSystem);\n      }, 0);\n    } catch (error) {\n      setMessage(error.message);\n    }\n  };\n\n  const emptyQueue = () => {\n    queueSystem.emptyQueue();\n    setQueue([]);\n    setCalledTickets([]);\n    setMessage(\"Queue has been emptied\");\n\n    saveQueue(queueSystem);\n  };\n\n  const averageWaitTime = () => {\n    const averageWaitTimes = queueSystem.averageWaitTimeForAll();\n    setAverageTime(\n      `Average wait times for all sections: \\n${formatAverageWaitTimes(\n        averageWaitTimes\n      )}`\n    );\n  };\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n      <div>\n        <h2>Client</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Enter your name\"\n          value={user}\n          onChange={(e) => setUser(e.target.value)}\n        />\n        <select\n          value={clientSection}\n          onChange={(e) => setClientSection(e.target.value)}\n        >\n          {SECTION_NAMES.map((section) => (\n            <option key={section} value={section}>\n              {section}\n            </option>\n          ))}\n        </select>\n        <button onClick={() => requestTicket(false)}>Request Ticket</button>\n        <button onClick={() => requestTicket(true)}>\n          Request Priority Ticket\n        </button>\n\n        <h3>Queue for {clientSection}</h3>\n        <pre>\n          {queue\n            .filter((ticket) => ticket.section === clientSection)\n            .map(formatTicket)\n            .join(\"\\n\\n\")}\n        </pre>\n      </div>\n\n      <div>\n        <h2>Customer</h2>\n        <select\n          value={customerSection}\n          onChange={(e) => setCustomerSection(e.target.value)}\n        >\n          {SECTION_NAMES.map((section) => (\n            <option key={section} value={section}>\n              {section}\n            </option>\n          ))}\n          \n        </select>\n        <button onClick={callNextTicket}>Call Next Ticket</button>\n        <button onClick={emptyQueue}>Empty Queue</button>\n        \n        <p>{message}</p>\n\n        <h3>Queue for {customerSection}</h3>\n        <pre>\n          {queue\n            .filter((ticket) => ticket.section === customerSection)\n            .map(formatTicket)\n            .join(\"\\n\\n\")}\n        </pre>\n\n        <h3>Last Called Tickets for {customerSection}</h3>\n        <pre>\n          {calledTickets\n            .filter((ticket) => ticket.section === customerSection)\n            .map(formatTicket)\n            .join(\"\\n\\n\")}\n        </pre>\n\n        <button onClick={averageWaitTime}>Average Wait Time</button>\n        <pre\n          style={{\n            whiteSpace: \"pre-wrap\",\n            wordWrap: `break-word`,\n            maxWidth: `350px`,\n          }}\n        >\n          {averageTime}\n        </pre>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App.js';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}