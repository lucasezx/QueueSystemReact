{"ast":null,"code":"const SECTION_NAMES = Object.freeze([\"Bakery\", \"Butcher\", \"Fishmonger\", \"Deli\", \"Checkout\"]);\nclass QueueSystem {\n  constructor(user, sharedQueue = []) {\n    this.user = user;\n    this.tickets = [];\n    this.queue = sharedQueue;\n    this.history = [];\n    this.sections = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = 1;\n      return acc;\n    }, {});\n  }\n  requestTicket(section, isPriority = false) {\n    if (!this.user) {\n      throw new Error(\"User name is required to request a ticket\");\n    }\n    try {\n      const updatedState = QueueSystem.requestTicket(queueState, user, section, isPriority);\n      setQueueState(updatedState);\n      setMessage(`Ticket added to section ${section}`);\n    } catch (error) {\n      setMessage(error.message);\n    }\n    const positionInSection = this.queue.filter(item => item.section === section).length;\n    return `${isPriority ? \"Priority\" : \"\"} Ticket for ${section} requested for ${this.user}, position ${positionInSection} in queue`;\n  }\n  showQueue(section) {\n    return this.queue.filter(item => item.section === section);\n  }\n  averageWaitTimeForAll() {\n    const sectionWaitTimes = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = 0;\n      return acc;\n    }, {});\n    const sectionCount = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = 0;\n      return acc;\n    }, {});\n    this.queue.forEach(item => {\n      const {\n        section\n      } = item;\n      const sectionTime = this.queue.filter(q => q.section === section).indexOf(item) + 1;\n      sectionWaitTimes[section] += sectionTime;\n      sectionCount[section]++;\n    });\n    const sectionAverages = {\n      Bakery: sectionWaitTimes.Bakery / sectionCount.Bakery,\n      Butcher: sectionWaitTimes.Butcher / sectionCount.Butcher,\n      Fishmonger: sectionWaitTimes.Fishmonger / sectionCount.Fishmonger,\n      Deli: sectionWaitTimes.Deli / sectionCount.Deli\n    };\n    return sectionAverages;\n  }\n  callNextTicket(section) {\n    const sectionQueue = this.queue.filter(item => item.section === section);\n    if (sectionQueue.length === 0) {\n      console.log(`There are no tickets in the ${section} queue`);\n    }\n    const nextTicketIndex = sectionQueue.findIndex(item => item.priority);\n    const nextTicket = nextTicketIndex === -1 ? sectionQueue[0] : sectionQueue[nextTicketIndex];\n    this.queue = this.queue.filter(item => item !== nextTicket);\n    this.history.push(nextTicket);\n    return `Next ticket for ${section} is ${nextTicket.ticket} for ${nextTicket.user}`;\n  }\n  showLastCalledTickets() {\n    if (this.history.length === 0) {\n      return \"No tickets have been called yet\";\n    }\n    return this.history.slice(-3);\n  }\n  emptyQueue() {\n    this.queue = [];\n    this.history = [];\n    this.tickets = [];\n    this.sections = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = 1;\n      return acc;\n    }, {});\n  }\n  static saveQueue(queue) {\n    const dataToSave = {\n      user: queue.user,\n      queue: queue.queue.filter(item => item.user && item.ticket && item.section),\n      tickets: queue.tickets,\n      history: queue.history.filter(item => item.user && item.ticket),\n      sections: SECTION_NAMES.reduce((acc, section) => {\n        acc[section] = queue.sections[section] || 1;\n        return acc;\n      }, {})\n    };\n    localStorage.setItem(\"queueData\", JSON.stringify(dataToSave));\n  }\n  static loadQueue() {\n    const data = localStorage.getItem(\"queueData\");\n    if (data) {\n      const parsedData = JSON.parse(data);\n      const queueSystem = new QueueSystem(parsedData.user || \"\");\n      queueSystem.queue = (parsedData.queue || []).filter(item => item.user && item.ticket && item.section);\n      queueSystem.tickets = parsedData.tickets || [];\n      queueSystem.history = (parsedData.history || []).filter(item => item.user && item.ticket);\n      queueSystem.sections = SECTION_NAMES.reduce((acc, section) => {\n        var _parsedData$sections;\n        acc[section] = ((_parsedData$sections = parsedData.sections) === null || _parsedData$sections === void 0 ? void 0 : _parsedData$sections[section]) || 1;\n        return acc;\n      }, {});\n      return queueSystem;\n    }\n    return new QueueSystem();\n  }\n}\nexport { QueueSystem, SECTION_NAMES };","map":{"version":3,"names":["SECTION_NAMES","Object","freeze","QueueSystem","constructor","user","sharedQueue","tickets","queue","history","sections","reduce","acc","section","requestTicket","isPriority","Error","updatedState","queueState","setQueueState","setMessage","error","message","positionInSection","filter","item","length","showQueue","averageWaitTimeForAll","sectionWaitTimes","sectionCount","forEach","sectionTime","q","indexOf","sectionAverages","Bakery","Butcher","Fishmonger","Deli","callNextTicket","sectionQueue","console","log","nextTicketIndex","findIndex","priority","nextTicket","push","ticket","showLastCalledTickets","slice","emptyQueue","saveQueue","dataToSave","localStorage","setItem","JSON","stringify","loadQueue","data","getItem","parsedData","parse","queueSystem","_parsedData$sections"],"sources":["/home/lucas/workspace/teste/objects.js/queue-system-frontend/src/queueSystem.js"],"sourcesContent":["const SECTION_NAMES = Object.freeze([\n  \"Bakery\",\n  \"Butcher\",\n  \"Fishmonger\",\n  \"Deli\",\n  \"Checkout\",\n]);\n\nclass QueueSystem {\n  constructor(user, sharedQueue = []) {\n    this.user = user;\n    this.tickets = [];\n    this.queue = sharedQueue;\n    this.history = [];\n    this.sections = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = 1;\n      return acc;\n    }, {});\n  }\n\n  requestTicket(section, isPriority = false) {\n    if (!this.user) {\n      throw new Error(\"User name is required to request a ticket\");\n    }\n\n    try {\n      const updatedState = QueueSystem.requestTicket(\n        queueState,\n        user,\n        section,\n        isPriority\n      );\n      setQueueState(updatedState);\n      setMessage(`Ticket added to section ${section}`);\n    } catch (error) {\n      setMessage(error.message);\n    }\n\n    const positionInSection = this.queue.filter(\n      (item) => item.section === section\n    ).length;\n    return `${\n      isPriority ? \"Priority\" : \"\"\n    } Ticket for ${section} requested for ${\n      this.user\n    }, position ${positionInSection} in queue`;\n  }\n\n  showQueue(section) {\n    return this.queue.filter((item) => item.section === section);\n  }\n\n  averageWaitTimeForAll() {\n    const sectionWaitTimes = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = 0;\n      return acc;\n    }, {});\n\n    const sectionCount = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = 0;\n      return acc;\n    }, {});\n\n    this.queue.forEach((item) => {\n      const { section } = item;\n      const sectionTime =\n        this.queue.filter((q) => q.section === section).indexOf(item) + 1;\n\n      sectionWaitTimes[section] += sectionTime;\n      sectionCount[section]++;\n    });\n\n    const sectionAverages = {\n      Bakery: sectionWaitTimes.Bakery / sectionCount.Bakery,\n      Butcher: sectionWaitTimes.Butcher / sectionCount.Butcher,\n      Fishmonger: sectionWaitTimes.Fishmonger / sectionCount.Fishmonger,\n      Deli: sectionWaitTimes.Deli / sectionCount.Deli,\n    };\n\n    return sectionAverages;\n  }\n\n  callNextTicket(section) {\n    const sectionQueue = this.queue.filter((item) => item.section === section);\n    if (sectionQueue.length === 0) {\n      console.log(`There are no tickets in the ${section} queue`);\n    }\n\n    const nextTicketIndex = sectionQueue.findIndex((item) => item.priority);\n    const nextTicket =\n      nextTicketIndex === -1 ? sectionQueue[0] : sectionQueue[nextTicketIndex];\n\n    this.queue = this.queue.filter((item) => item !== nextTicket);\n    this.history.push(nextTicket);\n    return `Next ticket for ${section} is ${nextTicket.ticket} for ${nextTicket.user}`;\n  }\n\n  showLastCalledTickets() {\n    if (this.history.length === 0) {\n      return \"No tickets have been called yet\";\n    }\n    return this.history.slice(-3);\n  }\n\n  emptyQueue() {\n    this.queue = [];\n    this.history = [];\n    this.tickets = [];\n    this.sections = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = 1;\n      return acc;\n    }, {});\n  }\n\n  static saveQueue(queue) {\n    const dataToSave = {\n      user: queue.user,\n      queue: queue.queue.filter(\n        (item) => item.user && item.ticket && item.section\n      ),\n      tickets: queue.tickets,\n      history: queue.history.filter((item) => item.user && item.ticket),\n      sections: SECTION_NAMES.reduce((acc, section) => {\n        acc[section] = queue.sections[section] || 1;\n        return acc;\n      }, {}),\n    };\n    localStorage.setItem(\"queueData\", JSON.stringify(dataToSave));\n  }\n\n  static loadQueue() {\n    const data = localStorage.getItem(\"queueData\");\n    if (data) {\n      const parsedData = JSON.parse(data);\n\n      const queueSystem = new QueueSystem(parsedData.user || \"\");\n\n      queueSystem.queue = (parsedData.queue || []).filter(\n        (item) => item.user && item.ticket && item.section\n      );\n      queueSystem.tickets = parsedData.tickets || [];\n      queueSystem.history = (parsedData.history || []).filter(\n        (item) => item.user && item.ticket\n      );\n      queueSystem.sections = SECTION_NAMES.reduce((acc, section) => {\n        acc[section] = parsedData.sections?.[section] || 1;\n        return acc;\n      }, {});\n\n      return queueSystem;\n    }\n    return new QueueSystem();\n  }\n}\n\nexport { QueueSystem, SECTION_NAMES };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}