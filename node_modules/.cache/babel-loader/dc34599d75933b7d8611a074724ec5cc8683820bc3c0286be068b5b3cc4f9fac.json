{"ast":null,"code":"const {\n  useEffect\n} = require('react');\nuseEffect(() => {\n  showQueue();\n}, [section]);\nconst SECTION_NAMES = Object.freeze([\"Bakery\", \"Butcher\", \"Fishmonger\", \"Deli\", \"Checkout\"]);\nclass QueueSystem {\n  constructor(user, sharedQueue = []) {\n    this.user = user;\n    this.tickets = [];\n    this.queue = sharedQueue;\n    this.history = [];\n    this.sections = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = 1;\n      return acc;\n    }, {});\n  }\n  requestTicket(section, isPriority = false) {\n    const ticketNumber = this.sections[section]++;\n    this.queue.push({\n      user: this.user,\n      ticket: ticketNumber,\n      section,\n      priority: isPriority\n    });\n    const positionInSection = this.queue.filter(item => item.section === section).length;\n    return `${isPriority ? \"Priority\" : \"\"} Ticket for ${section} requested for ${this.user}, position ${positionInSection} in queue`;\n  }\n  showQueue(section) {\n    return this.queue.filter(item => item.section === section);\n  }\n  averageWaitTimeForAll() {\n    const sectionWaitTimes = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = 0;\n      return acc;\n    }, {});\n    const sectionCount = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = 0;\n      return acc;\n    }, {});\n    this.queue.forEach(item => {\n      const {\n        section\n      } = item;\n      const sectionTime = this.queue.filter(q => q.section === section).indexOf(item) + 1;\n      sectionWaitTimes[section] += sectionTime;\n      sectionCount[section]++;\n    });\n    const sectionAverages = {\n      Bakery: sectionWaitTimes.Bakery / sectionCount.Bakery,\n      Butcher: sectionWaitTimes.Butcher / sectionCount.Butcher,\n      Fishmonger: sectionWaitTimes.Fishmonger / sectionCount.Fishmonger,\n      Deli: sectionWaitTimes.Deli / sectionCount.Deli\n    };\n    return sectionAverages;\n  }\n  callNextTicket(section) {\n    const sectionQueue = this.queue.filter(item => item.section === section);\n    if (sectionQueue.length === 0) {\n      console.log(`There are no tickets in the ${section} queue`);\n    }\n    const nextTicketIndex = sectionQueue.findIndex(item => item.priority);\n    const nextTicket = nextTicketIndex === -1 ? sectionQueue[0] : sectionQueue[nextTicketIndex];\n    this.queue = this.queue.filter(item => item !== nextTicket);\n    this.history.push(nextTicket);\n    return `Next ticket for ${section} is ${nextTicket.ticket} for ${nextTicket.user}`;\n  }\n  emptyQueue() {\n    this.queue = [];\n    this.history = [];\n    this.tickets = [];\n    this.sections = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = 1;\n      return acc;\n    }, {});\n  }\n  toString() {\n    return `User: ${this.user}\\nTickets: ${this.tickets}\\nQueue: ${JSON.stringify(this.queue)}`;\n  }\n}\nmodule.exports = {\n  QueueSystem,\n  SECTION_NAMES\n};","map":{"version":3,"names":["useEffect","require","showQueue","section","SECTION_NAMES","Object","freeze","QueueSystem","constructor","user","sharedQueue","tickets","queue","history","sections","reduce","acc","requestTicket","isPriority","ticketNumber","push","ticket","priority","positionInSection","filter","item","length","averageWaitTimeForAll","sectionWaitTimes","sectionCount","forEach","sectionTime","q","indexOf","sectionAverages","Bakery","Butcher","Fishmonger","Deli","callNextTicket","sectionQueue","console","log","nextTicketIndex","findIndex","nextTicket","emptyQueue","toString","JSON","stringify","module","exports"],"sources":["/home/lucas/workspace/teste/objects.js/queue-system-frontend/src/queueSystem.js"],"sourcesContent":["const { useEffect } = require('react');\n  \nuseEffect(() => {\n  showQueue();\n}, [section]);\n\nconst SECTION_NAMES = Object.freeze([\n  \"Bakery\",\n  \"Butcher\",\n  \"Fishmonger\",\n  \"Deli\",\n  \"Checkout\",\n]);\n\nclass QueueSystem {\n  constructor(user, sharedQueue = []) {\n    this.user = user;\n    this.tickets = [];\n    this.queue = sharedQueue;\n    this.history = [];\n    this.sections = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = 1;\n      return acc;\n    }, {});\n  }\n\n  requestTicket(section, isPriority = false) {\n    const ticketNumber = this.sections[section]++;\n    this.queue.push({\n      user: this.user,\n      ticket: ticketNumber,\n      section,\n      priority: isPriority,\n    });\n    const positionInSection = this.queue.filter(\n      (item) => item.section === section\n    ).length;\n    return `${isPriority ? \"Priority\" : \"\"} Ticket for ${section} requested for ${this.user}, position ${positionInSection} in queue`;\n  }\n\n  showQueue(section) {\n    return this.queue.filter((item) => item.section === section);\n  }\n\n  averageWaitTimeForAll() {\n    const sectionWaitTimes = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = 0;\n      return acc;\n    }, {});\n\n    const sectionCount = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = 0;\n      return acc;\n    }, {});\n\n    this.queue.forEach((item) => {\n      const { section } = item;\n      const sectionTime =\n        this.queue.filter((q) => q.section === section).indexOf(item) + 1;\n\n      sectionWaitTimes[section] += sectionTime;\n      sectionCount[section]++;\n    });\n\n    const sectionAverages = {\n      Bakery: sectionWaitTimes.Bakery / sectionCount.Bakery,\n      Butcher: sectionWaitTimes.Butcher / sectionCount.Butcher,\n      Fishmonger: sectionWaitTimes.Fishmonger / sectionCount.Fishmonger,\n      Deli: sectionWaitTimes.Deli / sectionCount.Deli,\n    };\n\n    return sectionAverages;\n  }\n\n  callNextTicket(section) {\n    const sectionQueue = this.queue.filter((item) => item.section === section);\n    if (sectionQueue.length === 0) {\n      console.log(`There are no tickets in the ${section} queue`);\n    }\n\n    const nextTicketIndex = sectionQueue.findIndex((item) => item.priority);\n    const nextTicket = nextTicketIndex === -1 ? sectionQueue[0] : sectionQueue[nextTicketIndex];\n    \n    this.queue = this.queue.filter((item) => item !== nextTicket);\n    this.history.push(nextTicket);\n    return `Next ticket for ${section} is ${nextTicket.ticket} for ${nextTicket.user}`;\n  }\n\n\n  emptyQueue() {\n    this.queue = [];\n    this.history = [];\n    this.tickets = [];\n    this.sections = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = 1;\n      return acc;\n    }, {});\n  }\n\n  toString() {\n    return `User: ${this.user}\\nTickets: ${\n      this.tickets\n    }\\nQueue: ${JSON.stringify(this.queue)}`;\n  }\n\n}\n\nmodule.exports = {\n  QueueSystem,\n  SECTION_NAMES,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}