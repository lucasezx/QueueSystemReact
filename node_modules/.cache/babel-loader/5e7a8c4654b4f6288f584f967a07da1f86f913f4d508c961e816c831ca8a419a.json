{"ast":null,"code":"const SECTION_NAMES=Object.freeze([\"Bakery\",\"Butcher\",\"Fishmonger\",\"Deli\",\"Checkout\"]);class QueueSystem{constructor(user){let sharedQueue=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];this.user=user;this.tickets=[];this.queue=sharedQueue;this.history=[];this.sections=SECTION_NAMES.reduce((acc,section)=>{acc[section]=1;return acc;},{});}requestTicket(section){let isPriority=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;const ticketNumber=this.sections[section]++;this.queue.push({user:this.user,ticket:ticketNumber,section,priority:isPriority});const positionInSection=this.queue.filter(item=>item.section===section).length;return\"\".concat(isPriority?\"Priority\":\"\",\" Ticket for \").concat(section,\" requested for \").concat(this.user,\", position \").concat(positionInSection,\" in queue\");}showQueue(section){return this.queue.filter(item=>item.section===section);}averageWaitTimeForAll(){const sectionWaitTimes=SECTION_NAMES.reduce((acc,section)=>{acc[section]=0;return acc;},{});const sectionCount=SECTION_NAMES.reduce((acc,section)=>{acc[section]=0;return acc;},{});this.queue.forEach(item=>{const{section}=item;const sectionTime=this.queue.filter(q=>q.section===section).indexOf(item)+1;sectionWaitTimes[section]+=sectionTime;sectionCount[section]++;});const sectionAverages={Bakery:sectionWaitTimes.Bakery/sectionCount.Bakery,Butcher:sectionWaitTimes.Butcher/sectionCount.Butcher,Fishmonger:sectionWaitTimes.Fishmonger/sectionCount.Fishmonger,Deli:sectionWaitTimes.Deli/sectionCount.Deli};return sectionAverages;}callNextTicket(section){const sectionQueue=this.queue.filter(item=>item.section===section);if(sectionQueue.length===0){console.log(\"There are no tickets in the \".concat(section,\" queue\"));}const nextTicketIndex=sectionQueue.findIndex(item=>item.priority);const nextTicket=nextTicketIndex===-1?sectionQueue[0]:sectionQueue[nextTicketIndex];this.queue=this.queue.filter(item=>item!==nextTicket);this.history.push(nextTicket);return\"Next ticket for \".concat(section,\" is \").concat(nextTicket.ticket,\" for \").concat(nextTicket.user);}showLastCalledTickets(){if(this.history.length===0){return\"No tickets have been called yet\";}return this.history.slice(Math.max(this.history.length-5,0));}emptyQueue(){this.queue=[];this.history=[];this.tickets=[];this.sections=SECTION_NAMES.reduce((acc,section)=>{acc[section]=1;return acc;},{});}static saveQueue(queue){const dataToSave={user:queue.user,queue:queue.queue.filter(item=>item.user&&item.ticket&&item.section),tickets:queue.tickets,history:queue.history.filter(item=>item.user&&item.ticket),sections:SECTION_NAMES.reduce((acc,section)=>{acc[section]=queue.sections[section]||1;return acc;},{})};localStorage.setItem(\"queueData\",JSON.stringify(dataToSave));}static loadQueue(){const data=localStorage.getItem(\"queueData\");if(data){const parsedData=JSON.parse(data);const queueSystem=new QueueSystem(parsedData.user||\"\");queueSystem.queue=(parsedData.queue||[]).filter(item=>item.user&&item.ticket&&item.section);queueSystem.tickets=parsedData.tickets||[];queueSystem.history=(parsedData.history||[]).filter(item=>item.user&&item.ticket);queueSystem.sections=SECTION_NAMES.reduce((acc,section)=>{var _parsedData$sections;acc[section]=((_parsedData$sections=parsedData.sections)===null||_parsedData$sections===void 0?void 0:_parsedData$sections[section])||1;return acc;},{});return queueSystem;}return new QueueSystem();}}module.exports={QueueSystem,SECTION_NAMES};","map":{"version":3,"names":["SECTION_NAMES","Object","freeze","QueueSystem","constructor","user","sharedQueue","arguments","length","undefined","tickets","queue","history","sections","reduce","acc","section","requestTicket","isPriority","ticketNumber","push","ticket","priority","positionInSection","filter","item","concat","showQueue","averageWaitTimeForAll","sectionWaitTimes","sectionCount","forEach","sectionTime","q","indexOf","sectionAverages","Bakery","Butcher","Fishmonger","Deli","callNextTicket","sectionQueue","console","log","nextTicketIndex","findIndex","nextTicket","showLastCalledTickets","slice","Math","max","emptyQueue","saveQueue","dataToSave","localStorage","setItem","JSON","stringify","loadQueue","data","getItem","parsedData","parse","queueSystem","_parsedData$sections","module","exports"],"sources":["/home/lucas/workspace/teste/objects.js/queue-system-frontend/src/queueSystem.js"],"sourcesContent":["const SECTION_NAMES = Object.freeze([\n  \"Bakery\",\n  \"Butcher\",\n  \"Fishmonger\",\n  \"Deli\",\n  \"Checkout\",\n]);\n\nclass QueueSystem {\n  constructor(user, sharedQueue = []) {\n    this.user = user;\n    this.tickets = [];\n    this.queue = sharedQueue;\n    this.history = [];\n    this.sections = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = 1;\n      return acc;\n    }, {});\n  }\n\n  requestTicket(section, isPriority = false) {\n    const ticketNumber = this.sections[section]++;\n    this.queue.push({\n      user: this.user,\n      ticket: ticketNumber,\n      section,\n      priority: isPriority,\n    });\n    const positionInSection = this.queue.filter(\n      (item) => item.section === section\n    ).length;\n    return `${\n      isPriority ? \"Priority\" : \"\"\n    } Ticket for ${section} requested for ${\n      this.user\n    }, position ${positionInSection} in queue`;\n  }\n\n  showQueue(section) {\n    return this.queue.filter((item) => item.section === section);\n  }\n\n  averageWaitTimeForAll() {\n    const sectionWaitTimes = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = 0;\n      return acc;\n    }, {});\n\n    const sectionCount = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = 0;\n      return acc;\n    }, {});\n\n    this.queue.forEach((item) => {\n      const { section } = item;\n      const sectionTime =\n        this.queue.filter((q) => q.section === section).indexOf(item) + 1;\n\n      sectionWaitTimes[section] += sectionTime;\n      sectionCount[section]++;\n    });\n\n    const sectionAverages = {\n      Bakery: sectionWaitTimes.Bakery / sectionCount.Bakery,\n      Butcher: sectionWaitTimes.Butcher / sectionCount.Butcher,\n      Fishmonger: sectionWaitTimes.Fishmonger / sectionCount.Fishmonger,\n      Deli: sectionWaitTimes.Deli / sectionCount.Deli,\n    };\n\n    return sectionAverages;\n  }\n\n  callNextTicket(section) {\n    const sectionQueue = this.queue.filter((item) => item.section === section);\n    if (sectionQueue.length === 0) {\n      console.log(`There are no tickets in the ${section} queue`);\n    }\n\n    const nextTicketIndex = sectionQueue.findIndex((item) => item.priority);\n    const nextTicket =\n      nextTicketIndex === -1 ? sectionQueue[0] : sectionQueue[nextTicketIndex];\n\n    this.queue = this.queue.filter((item) => item !== nextTicket);\n    this.history.push(nextTicket);\n    return `Next ticket for ${section} is ${nextTicket.ticket} for ${nextTicket.user}`;\n  }\n\n  showLastCalledTickets() {\n    if (this.history.length === 0) {\n      return (\"No tickets have been called yet\");\n    }\n    return this.history.slice(Math.max(this.history.length - 5, 0));\n  }\n\n  emptyQueue() {\n    this.queue = [];\n    this.history = [];\n    this.tickets = [];\n    this.sections = SECTION_NAMES.reduce((acc, section) => {\n      acc[section] = 1;\n      return acc;\n    }, {});\n  }\n\n  static saveQueue(queue) {\n    const dataToSave = {\n      user: queue.user,\n      queue: queue.queue.filter(\n        (item) => item.user && item.ticket && item.section\n      ),\n      tickets: queue.tickets,\n      history: queue.history.filter((item) => item.user && item.ticket),\n      sections: SECTION_NAMES.reduce((acc, section) => {\n        acc[section] = queue.sections[section] || 1;\n        return acc;\n      }, {}),\n    };\n    localStorage.setItem(\"queueData\", JSON.stringify(dataToSave));\n  }\n\n  static loadQueue() {\n    const data = localStorage.getItem(\"queueData\");\n    if (data) {\n      const parsedData = JSON.parse(data);\n\n      const queueSystem = new QueueSystem(parsedData.user || \"\");\n\n      queueSystem.queue = (parsedData.queue || []).filter(\n        (item) => item.user && item.ticket && item.section\n      );\n      queueSystem.tickets = parsedData.tickets || [];\n      queueSystem.history = (parsedData.history || []).filter(\n        (item) => item.user && item.ticket\n      );\n      queueSystem.sections = SECTION_NAMES.reduce((acc, section) => {\n        acc[section] = parsedData.sections?.[section] || 1;\n        return acc;\n      }, {});\n\n      return queueSystem;\n    }\n    return new QueueSystem();\n  }\n}\n\nmodule.exports = {\n  QueueSystem,\n  SECTION_NAMES,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}